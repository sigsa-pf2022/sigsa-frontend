{"version":3,"file":"src_app_views_register_personal-data_personal-data_module_ts.js","mappings":"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CAAC;QACT,QAAQ,EAAE,mBAAmB;QAC7B,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA0ET;;KAEF,CAAC;GACW,gBAAgB,CAsG5B;AAtG4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvF7B;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEO;;;;;;;;;;;;;;;;;ACtL0E;AACxB;AACN;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB,YAAY,WAAW;AACvB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,qBAAqB;AAC/D;AACA;;AAEe;AACf;;AAEA,EAAE,sEAAY;AACd,yBAAyB,mEAAS;;AAElC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ,gDAAgD;AAChD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAE;AACxE,sBAAsB,EAAE,sBAAsB,EAAE,wBAAwB,EAAE;AAC1E,gCAAgC,EAAE,UAAU,EAAE;;AAE9C;AACA;AACA;AACA,kBAAkB;AAClB;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA,mCAAmC,EAAE,SAAS,+BAA+B,OAAO,EAAE,SAAS,+BAA+B;AAC9H,0CAA0C;;AAE1C;AACA;AACA;AACA;AACA;AACA,4DAA4D;;AAE5D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8CAA8C;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,6BAA6B;;AAE7B;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,mEAAkB,aAAa,qEAAoB;AACpE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,yBAAyB,mEAAkB,aAAa,qEAAoB;AAC5E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA","sources":["./src/app/services/shared/date-formatter.service.ts","./src/app/views/register/personal-data/personal-data.module.ts","./src/app/views/register/personal-data/personal-data.page.ts","./node_modules/date-fns/esm/constants/index.js","./node_modules/date-fns/esm/parseISO/index.js"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DateFormatterService {\n  constructor() {}\n\n  createDateFromCalendarStringDate(dateNotFormatted: string) {\n    const date = dateNotFormatted.split('-');\n    return new Date(Number(date[0]), Number(date[1]) - 1, Number(date[2]));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { PersonalDataPage } from './personal-data.page';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PersonalDataPage,\n  },\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n  ],\n  declarations: [PersonalDataPage],\n})\nexport class PersonalDataModule {}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { IonDatetime, NavController } from '@ionic/angular';\nimport { format, parseISO } from 'date-fns';\nimport { DateFormatterService } from 'src/app/services/shared/date-formatter.service';\nimport { RegisterFormDataService } from '../services/register-form-data.service';\nimport { Gesture, GestureController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-personal-data',\n  template: `\n    <ion-header class=\"ui-background__light\">\n      <ion-toolbar class=\"ui-toolbar__primary\">\n        <ion-buttons slot=\"start\">\n          <ion-back-button defaultHref=\"/welcome\"></ion-back-button>\n        </ion-buttons>\n        <ion-title class=\"ui-header__title-center\">Register</ion-title>\n      </ion-toolbar>\n    </ion-header>\n\n    <ion-content class=\"pd\">\n      <ion-img\n        class=\"pd__img\"\n        src=\"/assets/images/register/personal-data.svg\"\n      ></ion-img>\n      <form class=\"pd__form\" [formGroup]=\"registerForm\">\n        <ion-input\n          class=\"ui-form-input\"\n          formControlName=\"firstName\"\n          placeholder=\"Nombre\"\n          type=\"text\"\n          (ionChange)=\"change()\"\n        ></ion-input>\n        <ion-input\n          class=\"ui-form-input\"\n          formControlName=\"lastName\"\n          placeholder=\"Apellido\"\n          type=\"text\"\n        ></ion-input>\n        <ion-select\n          class=\"ui-form-input\"\n          formControlName=\"gender\"\n          placeholder=\"Genero\"\n          interface=\"alert\"\n        >\n          <ion-select-option value=\"M\">Masculino</ion-select-option>\n          <ion-select-option value=\"F\">Femenino</ion-select-option>\n          <ion-select-option value=\"PNF\">Prefiero no decirlo</ion-select-option>\n        </ion-select>\n        <ion-input\n          class=\"ui-form-input\"\n          [disabled]=\"true\"\n          placeholder=\"Fecha de Nacimiento\"\n          formControlName=\"birthday\"\n          id=\"open-modal\"\n        >\n        </ion-input>\n        <ion-modal trigger=\"open-modal\" class=\"calendar-modal\">\n          <ng-template>\n            <ion-content>\n              <ion-datetime\n                #bdt\n                [value]=\"date\"\n                locale=\"es-ES\"\n                presentation=\"date\"\n                (ionChange)=\"dateChanged(bdt.value)\"\n              >\n                <ion-buttons slot=\"buttons\">\n                  <ion-button color=\"primary\" (click)=\"confirmDateSelection()\"\n                    >Confirmar</ion-button\n                  >\n                </ion-buttons>\n              </ion-datetime>\n            </ion-content>\n          </ng-template>\n        </ion-modal>\n        <ion-text id=\"register\" color=\"secondary\"\n          >Registrese como profesional</ion-text\n        >\n      </form>\n    </ion-content>\n    <ion-footer class=\"footer__light\">\n      <ion-button (click)=\"navigate()\" [disabled]=\"!this.formValid()\" color=\"primary\"> Siguiente </ion-button>\n    </ion-footer>\n  `,\n  styleUrls: ['./personal-data.page.scss'],\n})\nexport class PersonalDataPage implements OnInit {\n  @ViewChild(IonDatetime) datetime: IonDatetime;\n  registerForm: FormGroup;\n  showCalendar = false;\n  date = format(new Date(), 'yyyy-MM-dd');\n  // timeout;\n  // el;\n\n  constructor(\n    private dateFormatterService: DateFormatterService,\n    private navController: NavController,\n    private registerFormDataService: RegisterFormDataService,\n    // private gestureCtrl: GestureController\n  ) {}\n\n  ngOnInit() {\n    this.registerForm = this.registerFormDataService.form;\n  }\n\n  ionViewWillEnter() {\n    //   this.el = document.getElementById('register');\n    //   const gesture: Gesture = this.gestureCtrl.create({\n    //     el: this.el,\n    //     gestureName: 'asd',\n    //     threshold: 0,\n    //     onStart: () => {\n    //       this.onStart();\n    //     },\n    //     onMove: (detail) => {\n    //       this.onMove(detail);\n    //     },\n    //     onEnd: () => {\n    //       this.clearGestureTimeout();\n    //     },\n    //   });\n    //   gesture.enable(true);\n  }\n\n  // onStart() {\n  //   const TIMEOUT = 500;\n  //   this.clearGestureTimeout();\n\n  //   this.timeout = setTimeout(() => {\n  //     console.log('longPress');\n  //     this.timeout = undefined;\n  //   }, TIMEOUT);\n  // }\n\n  // onMove(detail) {\n  //   // Allow a little bit of movement\n  //   if (detail.deltaX <= 10 && detail.deltaY <= 10) {\n  //     return;\n  //   }\n\n  //   this.clearGestureTimeout();\n  // }\n\n  // clearGestureTimeout() {\n  //   if (this.timeout) {\n  //     clearTimeout(this.timeout);\n  //     this.timeout = undefined;\n  //   }\n  // }\n\n  change() {\n    console.log(this.registerForm.get('firstName').errors);\n  }\n  openCalendar() {\n    this.showCalendar = !this.showCalendar;\n  }\n\n  // itemPressed() {\n  //   console.log('itemPressed');\n  // }\n\n  dateChanged(date: string) {\n    this.registerForm\n      .get('birthday')\n      .setValue(\n        format(\n          parseISO(\n            format(\n              this.dateFormatterService.createDateFromCalendarStringDate(date),\n              'yyyy-MM-dd'\n            )\n          ),\n          'dd/MM/yyyy'\n        )\n      );\n  }\n\n  confirmDateSelection() {\n    this.datetime.confirm(true);\n  }\n\n  formValid(){\n    return this.registerFormDataService.personalDataValid();\n  }\n\n  navigate() {\n    this.navController.navigateForward(['/register/user-data']);\n  }\n}\n","/**\n * Days in 1 week.\n *\n * @name daysInWeek\n * @constant\n * @type {number}\n * @default\n */\nexport var daysInWeek = 7;\n/**\n * Days in 1 year\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n *\n * @name daysInYear\n * @constant\n * @type {number}\n * @default\n */\n\nexport var daysInYear = 365.2425;\n/**\n * Maximum allowed time.\n *\n * @name maxTime\n * @constant\n * @type {number}\n * @default\n */\n\nexport var maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n/**\n * Milliseconds in 1 minute\n *\n * @name millisecondsInMinute\n * @constant\n * @type {number}\n * @default\n */\n\nexport var millisecondsInMinute = 60000;\n/**\n * Milliseconds in 1 hour\n *\n * @name millisecondsInHour\n * @constant\n * @type {number}\n * @default\n */\n\nexport var millisecondsInHour = 3600000;\n/**\n * Milliseconds in 1 second\n *\n * @name millisecondsInSecond\n * @constant\n * @type {number}\n * @default\n */\n\nexport var millisecondsInSecond = 1000;\n/**\n * Minimum allowed time.\n *\n * @name minTime\n * @constant\n * @type {number}\n * @default\n */\n\nexport var minTime = -maxTime;\n/**\n * Minutes in 1 hour\n *\n * @name minutesInHour\n * @constant\n * @type {number}\n * @default\n */\n\nexport var minutesInHour = 60;\n/**\n * Months in 1 quarter\n *\n * @name monthsInQuarter\n * @constant\n * @type {number}\n * @default\n */\n\nexport var monthsInQuarter = 3;\n/**\n * Months in 1 year\n *\n * @name monthsInYear\n * @constant\n * @type {number}\n * @default\n */\n\nexport var monthsInYear = 12;\n/**\n * Quarters in 1 year\n *\n * @name quartersInYear\n * @constant\n * @type {number}\n * @default\n */\n\nexport var quartersInYear = 4;\n/**\n * Seconds in 1 hour\n *\n * @name secondsInHour\n * @constant\n * @type {number}\n * @default\n */\n\nexport var secondsInHour = 3600;\n/**\n * Seconds in 1 minute\n *\n * @name secondsInMinute\n * @constant\n * @type {number}\n * @default\n */\n\nexport var secondsInMinute = 60;\n/**\n * Seconds in 1 day\n *\n * @name secondsInDay\n * @constant\n * @type {number}\n * @default\n */\n\nexport var secondsInDay = secondsInHour * 24;\n/**\n * Seconds in 1 week\n *\n * @name secondsInWeek\n * @constant\n * @type {number}\n * @default\n */\n\nexport var secondsInWeek = secondsInDay * 7;\n/**\n * Seconds in 1 year\n *\n * @name secondsInYear\n * @constant\n * @type {number}\n * @default\n */\n\nexport var secondsInYear = secondsInDay * daysInYear;\n/**\n * Seconds in 1 month\n *\n * @name secondsInMonth\n * @constant\n * @type {number}\n * @default\n */\n\nexport var secondsInMonth = secondsInYear / 12;\n/**\n * Seconds in 1 quarter\n *\n * @name secondsInQuarter\n * @constant\n * @type {number}\n * @default\n */\n\nexport var secondsInQuarter = secondsInMonth * 3;","import { millisecondsInHour, millisecondsInMinute } from \"../constants/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name parseISO\n * @category Common Helpers\n * @summary Parse ISO string\n *\n * @description\n * Parse the given string in ISO 8601 format and return an instance of Date.\n *\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If the argument isn't a string, the function cannot parse the string or\n * the values are invalid, it returns Invalid Date.\n *\n * @param {String} argument - the value to convert\n * @param {Object} [options] - an object with options.\n * @param {0|1|2} [options.additionalDigits=2] - the additional number of digits in the extended year format\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * const result = parseISO('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert string '+02014101' to date,\n * // if the additional number of digits in the extended year format is 1:\n * const result = parseISO('+02014101', { additionalDigits: 1 })\n * //=> Fri Apr 11 2014 00:00:00\n */\n\nexport default function parseISO(argument, options) {\n  var _options$additionalDi;\n\n  requiredArgs(1, arguments);\n  var additionalDigits = toInteger((_options$additionalDi = options === null || options === void 0 ? void 0 : options.additionalDigits) !== null && _options$additionalDi !== void 0 ? _options$additionalDi : 2);\n\n  if (additionalDigits !== 2 && additionalDigits !== 1 && additionalDigits !== 0) {\n    throw new RangeError('additionalDigits must be 0, 1 or 2');\n  }\n\n  if (!(typeof argument === 'string' || Object.prototype.toString.call(argument) === '[object String]')) {\n    return new Date(NaN);\n  }\n\n  var dateStrings = splitDateString(argument);\n  var date;\n\n  if (dateStrings.date) {\n    var parseYearResult = parseYear(dateStrings.date, additionalDigits);\n    date = parseDate(parseYearResult.restDateString, parseYearResult.year);\n  }\n\n  if (!date || isNaN(date.getTime())) {\n    return new Date(NaN);\n  }\n\n  var timestamp = date.getTime();\n  var time = 0;\n  var offset;\n\n  if (dateStrings.time) {\n    time = parseTime(dateStrings.time);\n\n    if (isNaN(time)) {\n      return new Date(NaN);\n    }\n  }\n\n  if (dateStrings.timezone) {\n    offset = parseTimezone(dateStrings.timezone);\n\n    if (isNaN(offset)) {\n      return new Date(NaN);\n    }\n  } else {\n    var dirtyDate = new Date(timestamp + time); // js parsed string assuming it's in UTC timezone\n    // but we need it to be parsed in our timezone\n    // so we use utc values to build date in our timezone.\n    // Year values from 0 to 99 map to the years 1900 to 1999\n    // so set year explicitly with setFullYear.\n\n    var result = new Date(0);\n    result.setFullYear(dirtyDate.getUTCFullYear(), dirtyDate.getUTCMonth(), dirtyDate.getUTCDate());\n    result.setHours(dirtyDate.getUTCHours(), dirtyDate.getUTCMinutes(), dirtyDate.getUTCSeconds(), dirtyDate.getUTCMilliseconds());\n    return result;\n  }\n\n  return new Date(timestamp + time + offset);\n}\nvar patterns = {\n  dateTimeDelimiter: /[T ]/,\n  timeZoneDelimiter: /[Z ]/i,\n  timezone: /([Z+-].*)$/\n};\nvar dateRegex = /^-?(?:(\\d{3})|(\\d{2})(?:-?(\\d{2}))?|W(\\d{2})(?:-?(\\d{1}))?|)$/;\nvar timeRegex = /^(\\d{2}(?:[.,]\\d*)?)(?::?(\\d{2}(?:[.,]\\d*)?))?(?::?(\\d{2}(?:[.,]\\d*)?))?$/;\nvar timezoneRegex = /^([+-])(\\d{2})(?::?(\\d{2}))?$/;\n\nfunction splitDateString(dateString) {\n  var dateStrings = {};\n  var array = dateString.split(patterns.dateTimeDelimiter);\n  var timeString; // The regex match should only return at maximum two array elements.\n  // [date], [time], or [date, time].\n\n  if (array.length > 2) {\n    return dateStrings;\n  }\n\n  if (/:/.test(array[0])) {\n    timeString = array[0];\n  } else {\n    dateStrings.date = array[0];\n    timeString = array[1];\n\n    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {\n      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];\n      timeString = dateString.substr(dateStrings.date.length, dateString.length);\n    }\n  }\n\n  if (timeString) {\n    var token = patterns.timezone.exec(timeString);\n\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], '');\n      dateStrings.timezone = token[1];\n    } else {\n      dateStrings.time = timeString;\n    }\n  }\n\n  return dateStrings;\n}\n\nfunction parseYear(dateString, additionalDigits) {\n  var regex = new RegExp('^(?:(\\\\d{4}|[+-]\\\\d{' + (4 + additionalDigits) + '})|(\\\\d{2}|[+-]\\\\d{' + (2 + additionalDigits) + '})$)');\n  var captures = dateString.match(regex); // Invalid ISO-formatted year\n\n  if (!captures) return {\n    year: NaN,\n    restDateString: ''\n  };\n  var year = captures[1] ? parseInt(captures[1]) : null;\n  var century = captures[2] ? parseInt(captures[2]) : null; // either year or century is null, not both\n\n  return {\n    year: century === null ? year : century * 100,\n    restDateString: dateString.slice((captures[1] || captures[2]).length)\n  };\n}\n\nfunction parseDate(dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) return new Date(NaN);\n  var captures = dateString.match(dateRegex); // Invalid ISO-formatted string\n\n  if (!captures) return new Date(NaN);\n  var isWeekDate = !!captures[4];\n  var dayOfYear = parseDateUnit(captures[1]);\n  var month = parseDateUnit(captures[2]) - 1;\n  var day = parseDateUnit(captures[3]);\n  var week = parseDateUnit(captures[4]);\n  var dayOfWeek = parseDateUnit(captures[5]) - 1;\n\n  if (isWeekDate) {\n    if (!validateWeekDate(year, week, dayOfWeek)) {\n      return new Date(NaN);\n    }\n\n    return dayOfISOWeekYear(year, week, dayOfWeek);\n  } else {\n    var date = new Date(0);\n\n    if (!validateDate(year, month, day) || !validateDayOfYearDate(year, dayOfYear)) {\n      return new Date(NaN);\n    }\n\n    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));\n    return date;\n  }\n}\n\nfunction parseDateUnit(value) {\n  return value ? parseInt(value) : 1;\n}\n\nfunction parseTime(timeString) {\n  var captures = timeString.match(timeRegex);\n  if (!captures) return NaN; // Invalid ISO-formatted time\n\n  var hours = parseTimeUnit(captures[1]);\n  var minutes = parseTimeUnit(captures[2]);\n  var seconds = parseTimeUnit(captures[3]);\n\n  if (!validateTime(hours, minutes, seconds)) {\n    return NaN;\n  }\n\n  return hours * millisecondsInHour + minutes * millisecondsInMinute + seconds * 1000;\n}\n\nfunction parseTimeUnit(value) {\n  return value && parseFloat(value.replace(',', '.')) || 0;\n}\n\nfunction parseTimezone(timezoneString) {\n  if (timezoneString === 'Z') return 0;\n  var captures = timezoneString.match(timezoneRegex);\n  if (!captures) return 0;\n  var sign = captures[1] === '+' ? -1 : 1;\n  var hours = parseInt(captures[2]);\n  var minutes = captures[3] && parseInt(captures[3]) || 0;\n\n  if (!validateTimezone(hours, minutes)) {\n    return NaN;\n  }\n\n  return sign * (hours * millisecondsInHour + minutes * millisecondsInMinute);\n}\n\nfunction dayOfISOWeekYear(isoWeekYear, week, day) {\n  var date = new Date(0);\n  date.setUTCFullYear(isoWeekYear, 0, 4);\n  var fourthOfJanuaryDay = date.getUTCDay() || 7;\n  var diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n} // Validation functions\n// February is null to handle the leap year (using ||)\n\n\nvar daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}\n\nfunction validateDate(year, month, date) {\n  return month >= 0 && month <= 11 && date >= 1 && date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28));\n}\n\nfunction validateDayOfYearDate(year, dayOfYear) {\n  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);\n}\n\nfunction validateWeekDate(_year, week, day) {\n  return week >= 1 && week <= 53 && day >= 0 && day <= 6;\n}\n\nfunction validateTime(hours, minutes, seconds) {\n  if (hours === 24) {\n    return minutes === 0 && seconds === 0;\n  }\n\n  return seconds >= 0 && seconds < 60 && minutes >= 0 && minutes < 60 && hours >= 0 && hours < 25;\n}\n\nfunction validateTimezone(_hours, minutes) {\n  return minutes >= 0 && minutes <= 59;\n}"],"names":[],"sourceRoot":"webpack:///"}