{"version":3,"file":"src_app_views_register_user-data_user-data_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACmB;AACrB;AACG;AACO;AAEvD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,yDAAY;KACxB;CACF,CAAC;IAMW,cAAc,SAAd,cAAc;CAAG;AAAjB,cAAc;IAJ1B,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,yDAAY,EAAE,uDAAW,EAAE,+DAAmB,EAAE,uDAAW,EAAE,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACrG,YAAY,EAAE,CAAC,yDAAY,CAAC;KAC7B,CAAC;GACW,cAAc,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;AClBkC;AAEkB;AACxB;AACrB;AAC4F;AAC/B;AACd;IAsDpE,YAAY,SAAZ,YAAY;IAMvB,YACU,uBAAgD,EAChD,KAAsB,EACtB,SAA2B,EAC3B,IAA2B,EAC3B,eAAgC;QAJhC,4BAAuB,GAAvB,uBAAuB,CAAyB;QAChD,UAAK,GAAL,KAAK,CAAiB;QACtB,cAAS,GAAT,SAAS,CAAkB;QAC3B,SAAI,GAAJ,IAAI,CAAuB;QAC3B,oBAAe,GAAf,eAAe,CAAiB;QAR1C,iBAAY,GAAG,KAAK,CAAC;QACrB,SAAI,GAAG,oDAAM,CAAC,IAAI,IAAI,EAAE,EAAE,YAAY,CAAC,CAAC;IAQrC,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC;IACxD,CAAC;IAEK,QAAQ;;YACZ,gEAAgE;YAChE,sBAAsB;YACtB,MAAM;YACN,MAAM,IAAI,CAAC,IAAI;iBACZ,MAAM,CACL,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,EACpC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CACxC;iBACA,IAAI,CAAC,CAAO,GAAG,EAAE,EAAE,CAAC;gBACnB,MAAM,IAAI,CAAC,eAAe,EAAE,CAAC;YAC/B,CAAC,EAAC;iBACD,KAAK,CAAC,CAAO,KAAK,EAAE,EAAE,CAAC;gBACtB,MAAM,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;gBAC5B,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACrB,CAAC,EAAC,CAAC;QACP,CAAC;KAAA;IAEK,eAAe;;YACnB,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;gBAC9C,SAAS,EAAE,wIAA8B;gBACzC,QAAQ,EAAE,OAAO;gBACjB,eAAe,EAAE,KAAK;aACvB,CAAC,CAAC;YACH,MAAM,KAAK,CAAC,OAAO,EAAE,CAAC;QACxB,CAAC;KAAA;IAEK,SAAS,CAAC,IAAY;;YAC1B,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;gBACpC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,mBAAmB,IAAI,EAAE,CAAC;gBAC1D,QAAQ,EAAE,IAAI;gBACd,KAAK,EAAC,QAAQ;aACf,CAAC,CAAC;YACH,MAAM,KAAK,CAAC,OAAO,EAAE,CAAC;QACxB,CAAC;KAAA;CACF;;YA3GQ,yFAAuB;YALO,2DAAe;YAC7C,iEAAgB;YAGhB,yGAAqB;YAJR,2DAAe;;;uBA4DlC,oDAAS,SAAC,uDAAW;;AADX,YAAY;IApDxB,wDAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QACzB,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA+CT;;KAEF,CAAC;GACW,YAAY,CAqDxB;AArDwB","sources":["./src/app/views/register/user-data/user-data.module.ts","./src/app/views/register/user-data/user-data.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { UserDataPage } from './user-data.page';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserDataPage,\n  },\n];\n\n@NgModule({\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, IonicModule, RouterModule.forChild(routes)],\n  declarations: [UserDataPage],\n})\nexport class UserDataModule {}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { IonDatetime, ModalController, ToastController } from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { format } from 'date-fns';\nimport { SuccessCreationAcountComponent } from 'src/app/components/success-creation-acount/success-creation-acount.component';\nimport { AuthenticationService } from 'src/app/services/authentication/authentication.service';\nimport { RegisterFormDataService } from '../services/register-form-data.service';\n\n@Component({\n  selector: 'app-user-data',\n  template: `\n    <ion-header class=\"ui-background__light\">\n      <ion-toolbar class=\"ui-toolbar__primary\">\n        <ion-buttons slot=\"start\">\n          <ion-back-button\n            defaultHref=\"/register/personal-data\"\n          ></ion-back-button>\n        </ion-buttons>\n        <ion-title class=\"ui-header__title-center\">Register</ion-title>\n      </ion-toolbar>\n    </ion-header>\n\n    <ion-content class=\"ud\">\n      <ion-img\n        class=\"ud__img\"\n        src=\"/assets/images/register/user-data.svg\"\n      ></ion-img>\n      <form class=\"ud__form\" [formGroup]=\"registerForm\" (submit)=\"onSubmit()\">\n        <ion-input\n          class=\"ui-form-input\"\n          formControlName=\"email\"\n          placeholder=\"Email\"\n          type=\"text\"\n        ></ion-input>\n        <ion-input\n          class=\"ui-form-input\"\n          formControlName=\"password\"\n          placeholder=\"Contraseña\"\n          type=\"password\"\n        ></ion-input>\n        <ion-input\n          class=\"ui-form-input\"\n          formControlName=\"repeatPassword\"\n          placeholder=\"Repetir Contraseña\"\n          type=\"password\"\n        ></ion-input>\n      </form>\n    </ion-content>\n    <ion-footer class=\"footer__light\">\n      <ion-button\n        (click)=\"onSubmit()\"\n        [disabled]=\"!this.registerForm.valid\"\n        color=\"primary\"\n      >\n        Confirmar\n      </ion-button>\n    </ion-footer>\n  `,\n  styleUrls: ['./user-data.page.scss'],\n})\nexport class UserDataPage implements OnInit {\n  @ViewChild(IonDatetime) datetime: IonDatetime;\n  registerForm: FormGroup;\n  showCalendar = false;\n  date = format(new Date(), 'yyyy-MM-dd');\n  formattedDate;\n  constructor(\n    private registerFormDataService: RegisterFormDataService,\n    private toast: ToastController,\n    private translate: TranslateService,\n    private auth: AuthenticationService,\n    private modalController: ModalController\n  ) {}\n\n  ngOnInit() {\n    this.registerForm = this.registerFormDataService.form;\n  }\n\n  async onSubmit() {\n    // this.auth.register(this.registerForm.value).subscribe(res =>{\n    //   console.log(res);\n    // });\n    await this.auth\n      .signUp(\n        this.registerForm.get('email').value,\n        this.registerForm.get('password').value\n      )\n      .then(async (res) => {\n        await this.successRegister();\n      })\n      .catch(async (error) => {\n        await this.showError(error);\n        console.log(error);\n      });\n  }\n\n  async successRegister() {\n    const modal = await this.modalController.create({\n      component: SuccessCreationAcountComponent,\n      cssClass: 'modal',\n      backdropDismiss: false,\n    });\n    await modal.present();\n  }\n\n  async showError(code: string) {\n    const toast = await this.toast.create({\n      message: this.translate.instant(`register.errors.${code}`),\n      duration: 5000,\n      color:'danger',\n    });\n    await toast.present();\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}